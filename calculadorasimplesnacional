<!DOCTYPE html>
<html lang="pt-BR">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Calculadora Simples Nacional — RBT12 Automático</title>
<style>
  :root{ --bg:#0f172a; --card:#111827; --muted:#9ca3af; --accent:#10b981; --warn:#f59e0b; --err:#ef4444; }
  *{box-sizing:border-box}
  body{margin:0;background:#0b1020;color:#e5e7eb;font-family:system-ui,-apple-system,Segoe UI,Roboto,Inter,Arial}
  header{padding:20px 16px;background:#0d1328;border-bottom:1px solid rgba(255,255,255,.06)}
  h1{font-size:20px;margin:0 0 4px 0}
  .sub{color:#9ca3af;font-size:13px}
  main{padding:18px;display:grid;gap:16px;grid-template-columns:1fr}
  @media(min-width:1180px){ main{grid-template-columns: 1.2fr .8fr} }
  .card{background:#101827;border:1px solid rgba(255,255,255,.08);border-radius:12px;padding:14px}
  .card h3{margin:0 0 10px 0;font-size:16px;color:#fff}
  fieldset{border:1px solid rgba(255,255,255,.08);border-radius:10px;padding:10px;margin:0}
  legend{padding:0 6px;color:#cbd5e1;font-size:12px}
  label{display:block;font-size:12px;color:#cbd5e1;margin:0 0 6px}
  input[type="number"]{width:100%;padding:8px 10px;border-radius:8px;border:1px solid rgba(255,255,255,.12);background:#0b1224;color:#e5e7eb}
  input[type="number"]::placeholder{color:#6b7280}
  select{width:100%;padding:8px 10px;border-radius:8px;border:1px solid rgba(255,255,255,.12);background:#0b1224;color:#e5e7eb}
  .row-2{display:grid;grid-template-columns:repeat(2,1fr);gap:8px}
  .row-3{display:grid;grid-template-columns:repeat(3,1fr);gap:8px}
  .row-4{display:grid;grid-template-columns:repeat(4,1fr);gap:8px}
  .muted{color:#93a4b2;font-size:12px}
  .pill{display:inline-block;padding:2px 8px;border-radius:999px;font-size:12px;border:1px solid rgba(255,255,255,.12);color:#cbd5e1}
  table{width:100%;border-collapse:collapse;font-size:12px}
  th,td{padding:6px;border-bottom:1px dashed rgba(255,255,255,.09)}
  th{color:#cbd5e1;text-align:left}
  td.num{text-align:right;font-variant-numeric:tabular-nums}
  .total{font-weight:700;color:#fff;font-size:16px}
  .foot{color:#9ca3af;font-size:11px}
  .badge{font-size:11px;padding:2px 8px;border-radius:999px;background:#0b1224;border:1px solid rgba(255,255,255,.12)}
  .hl{background:rgba(16,185,129,.1)}
  .flex{display:flex;align-items:center;gap:8px;flex-wrap:wrap}
  .right{justify-content:flex-end}
  button{background:#0b1224;border:1px solid rgba(255,255,255,.12);color:#e5e7eb;border-radius:8px;padding:8px 10px;cursor:pointer}
  button.primary{background:#10b981;border-color:#10b981;color:#071014}
  details > summary{cursor:pointer}
  .grid{display:grid;gap:12px}
  .tbl-months td{padding:4px 6px}
</style>
</head>
<body>
<header>
  <h1>Calculadora Simples Nacional — Anexo I (Comércio) e III (Serviços)</h1>
  <div class="sub">RBT12 automático por mês de apuração + opção de edição manual. Regras: anexos I e III, PD, alíquota efetiva, repartição variável por faixa e observação ICMS > R$ 4,8 mi.</div>
</header>

<main>
  <section class="card">
    <h3>Configuração do mês de apuração</h3>
    <div class="row-3">
      <div>
        <label>Mês de apuração</label>
        <select id="competencia">
          <option value="2025-01">Jan/2025</option>
          <option value="2025-02">Fev/2025</option>
          <option value="2025-03">Mar/2025</option>
          <option value="2025-04">Abr/2025</option>
          <option value="2025-05">Mai/2025</option>
          <option value="2025-06">Jun/2025</option>
          <option value="2025-07">Jul/2025</option>
          <option value="2025-08">Ago/2025</option>
          <option value="2025-09">Set/2025</option>
          <option value="2025-10">Out/2025</option>
          <option value="2025-11">Nov/2025</option>
          <option value="2025-12">Dez/2025</option>
        </select>
      </div>
      <div>
        <label>Modo do RBT12</label>
        <select id="modo_rbt12">
          <option value="auto">Automático (12 meses anteriores à competência)</option>
          <option value="manual">Manual (digitar soma dos 12 últimos meses)</option>
        </select>
      </div>
      <div class="flex right">
        <button class="primary" id="calc">Calcular</button>
        <button id="download-btn" title="Baixar HTML desta calculadora">Baixar este arquivo</button>
      </div>
    </div>
  </section>

  <section class="card">
    <h3>Receitas por mês e atividade</h3>
    <div class="grid">
      <fieldset>
        <legend>2024 (base para RBT12 de Jan/2025 e seguintes)</legend>
        <table class="tbl-months" id="tbl-2024"></table>
        <div class="flex" style="margin-top:6px">
          <button id="fill-2024-print">Preencher com dados do print</button>
          <span class="muted">Dica: informe o faturamento bruto de cada mês de 2024 (Comércio e Serviços).</span>
        </div>
      </fieldset>

      <fieldset>
        <legend>2025 (mês de apuração e movimentação do ano)</legend>
        <table class="tbl-months" id="tbl-2025"></table>
        <div class="muted" style="margin-top:6px">O RBT12 automático considera sempre os 12 meses imediatamente anteriores ao mês selecionado em "Mês de apuração".</div>
      </fieldset>

      <fieldset id="fs-manual" style="display:none">
        <legend>RBT12 manual (soma dos 12 últimos meses)</legend>
        <div class="row-3">
          <div>
            <label>RBT12 total</label>
            <input type="number" step="0.01" id="rbt12_manual" placeholder="0,00" />
          </div>
          <div>
            <label>Receita do mês — Comércio (Anexo I)</label>
            <input type="number" step="0.01" id="mes_comercio_manual" placeholder="0,00" />
          </div>
          <div>
            <label>Receita do mês — Serviços (Anexo III)</label>
            <input type="number" step="0.01" id="mes_servico_manual" placeholder="0,00" />
          </div>
        </div>
        <div class="muted" style="margin-top:6px">Use este modo apenas se desejar informar manualmente o RBT12 e a receita do mês. No modo automático, ambos são derivados das tabelas de 2024/2025.</div>
      </fieldset>
    </div>
  </section>

  <section class="card">
    <h3>Resultados</h3>
    <div class="grid">
      <div class="row-3">
        <div><div class="muted">Competência</div><div id="competencia_out" class="total">—</div></div>
        <div><div class="muted">RBT12</div><div id="rbt12" class="total">R$ 0,00</div></div>
        <div><div class="muted">Receita do mês total</div><div id="mes_total" class="total">R$ 0,00</div></div>
      </div>

      <fieldset>
        <legend>Anexo I — Comércio</legend>
        <div class="row-2">
          <div><span class="muted">Faixa</span><div id="ax1-faixa" class="badge">—</div></div>
          <div><span class="muted">Alíquota nominal</span><div id="ax1-aliq" class="badge">—</div></div>
        </div>
        <div class="row-2" style="margin-top:8px">
          <div><span class="muted">Parcela a deduzir (PD)</span><div id="ax1-pd" class="badge">—</div></div>
          <div><span class="muted">Alíquota efetiva</span><div id="ax1-efetiva" class="badge hl">—</div></div>
        </div>
        <div style="margin-top:8px">
          <table>
            <thead><tr><th>Tributo</th><th class="num">% da repartição</th><th class="num">Valor</th></tr></thead>
            <tbody id="ax1-trib"></tbody>
            <tfoot><tr><td class="total">Total DAS — Anexo I</td><td></td><td class="num total" id="ax1-total">R$ 0,00</td></tr></tfoot>
          </table>
        </div>
        <div style="margin-top:10px">
          <div class="muted">Regra especial acima de R$ 4,8 milhões (ICMS)</div>
          <div id="ax1-480" class="pill">—</div>
        </div>
      </fieldset>

      <fieldset>
        <legend>Anexo III — Serviços</legend>
        <div class="row-2">
          <div><span class="muted">Faixa</span><div id="ax3-faixa" class="badge">—</div></div>
          <div><span class="muted">Alíquota nominal</span><div id="ax3-aliq" class="badge">—</div></div>
        </div>
        <div class="row-2" style="margin-top:8px">
          <div><span class="muted">Parcela a deduzir (PD)</span><div id="ax3-pd" class="badge">—</div></div>
          <div><span class="muted">Alíquota efetiva</span><div id="ax3-efetiva" class="badge hl">—</div></div>
        </div>
        <div style="margin-top:8px">
          <table>
            <thead><tr><th>Tributo</th><th class="num">% da repartição</th><th class="num">Valor</th></tr></thead>
            <tbody id="ax3-trib"></tbody>
            <tfoot><tr><td class="total">Total DAS — Anexo III</td><td></td><td class="num total" id="ax3-total">R$ 0,00</td></tr></tfoot>
          </table>
        </div>
        <div style="margin-top:10px">
          <div class="muted">Observação > R$ 4,8 mi (ISS não segue o ajuste de ICMS)</div>
          <div id="ax3-480" class="pill">—</div>
        </div>
      </fieldset>

      <div>
        <table><tfoot><tr><td class="total">TOTAL DAS</td><td class="num total" id="das-total">R$ 0,00</td></tr></tfoot></table>
      </div>
    </div>

    <div class="foot" style="margin-top:8px">
      Alíquota efetiva = (RBT12 × alíquota nominal − PD) ÷ RBT12. Repartição varia conforme a faixa do RBT12.
    </div>
  </section>

  <section class="card">
    <h3>Tabelas de referência</h3>
    <div class="grid">
      <details>
        <summary>Anexo I — faixas</summary>
        <table id="tbl-ax1"></table>
      </details>
      <details>
        <summary>Anexo III — faixas</summary>
        <table id="tbl-ax3"></table>
      </details>
      <details>
        <summary>Repartição por faixa (para conferência)</summary>
        <div class="grid">
          <div>
            <div class="muted">Anexo I: IRPJ, CSLL, COFINS, PIS, CPP, ICMS</div>
            <table id="tbl-ax1-split"></table>
          </div>
          <div>
            <div class="muted">Anexo III: CPP, ISS, CSLL, PIS, COFINS, IRPJ</div>
            <table id="tbl-ax3-split"></table>
          </div>
        </div>
      </details>
    </div>
  </section>
</main>

<script>
// Utilidades
const BRL = v => (isFinite(v) ? v : 0).toLocaleString('pt-BR', {style:'currency', currency:'BRL'});
const toNum = el => parseFloat((el.value||'').toString().replace(',','.'))||0;
const id = s=>document.getElementById(s);

// Tabelas de faixas/PD (Anexo I e III)
const ANEXO_I = [
  {faixa:1, de:0, ate:180000.00, aliq:0.0400, pd:0},
  {faixa:2, de:180000.01, ate:360000.00, aliq:0.0730, pd:5940.00},
  {faixa:3, de:360000.01, ate:720000.00, aliq:0.0950, pd:13860.00},
  {faixa:4, de:720000.01, ate:1800000.00, aliq:0.1070, pd:22500.00},
  {faixa:5, de:1800000.01, ate:3600000.00, aliq:0.1430, pd:87300.00},
  {faixa:6, de:3600000.01, ate:4800000.00, aliq:0.1900, pd:0}
];
const ANEXO_III = [
  {faixa:1, de:0, ate:180000.00, aliq:0.0600, pd:0},
  {faixa:2, de:180000.01, ate:360000.00, aliq:0.1120, pd:9360.00},
  {faixa:3, de:360000.01, ate:720000.00, aliq:0.1350, pd:17640.00},
  {faixa:4, de:720000.01, ate:1800000.00, aliq:0.1600, pd:35640.00},
  {faixa:5, de:1800000.01, ate:3600000.00, aliq:0.2100, pd:125640.00},
  {faixa:6, de:3600000.01, ate:4800000.00, aliq:0.3300, pd:648000.00}
];

// Repartição por faixa — varia por faixa
// Anexo I: [IRPJ, CSLL, COFINS, PIS, CPP, ICMS]
const SPLIT_I = {
  1:[0.055,0.035,0.1274,0.0276,0.4150,0.3400],
  2:[0.050,0.030,0.1231,0.0269,0.4200,0.3499],
  3:[0.050,0.030,0.1224,0.0268,0.4200,0.3508],
  4:[0.050,0.030,0.1221,0.0268,0.4200,0.3511],
  5:[0.046,0.028,0.1207,0.0265,0.4200,0.3590],
  6:[0.035,0.020,0.1000,0.0287,0.4210,0.3953]
};
// Anexo III: [CPP, ISS, CSLL, PIS, COFINS, IRPJ]
const SPLIT_III = {
  1:[0.4340,0.3250,0.0300,0.0400,0.1405,0.0278],
  2:[0.4340,0.3000,0.0300,0.0400,0.1405,0.0355],
  3:[0.4340,0.3250,0.0300,0.0400,0.1384,0.0296],
  4:[0.4340,0.3250,0.0300,0.0400,0.1364,0.0296],
  5:[0.4340,0.3250,0.0300,0.0400,0.1282,0.0278],
  6:[0.3050,0.1500,0.3500,0.1603,0.0930,0.0300]
};

// Meses utilitários
const MESES = ['Jan','Fev','Mar','Abr','Mai','Jun','Jul','Ago','Set','Out','Nov','Dez'];
function buildMonthTable(year, tableId){
  const el = id(tableId);
  el.innerHTML = `<tr><th>Mês</th><th class="num">Comércio (Anexo I)</th><th class="num">Serviços (Anexo III)</th><th class="num">Total</th></tr>` +
    MESES.map((m,idx)=>{
      const kC = `y${year}_m${idx}_c`; const kS = `y${year}_m${idx}_s`;
      return `<tr>
        <td>${m}/${year}</td>
        <td class="num"><input type="number" step="0.01" id="${kC}" placeholder="0,00" /></td>
        <td class="num"><input type="number" step="0.01" id="${kS}" placeholder="0,00" /></td>
        <td class="num" id="${kC}_tot">R$ 0,00</td>
      </tr>`
    }).join('');
}

buildMonthTable(2024, 'tbl-2024');
buildMonthTable(2025, 'tbl-2025');

// Totais por linha
function updateRowTotals(year){
  MESES.forEach((_,idx)=>{
    const c = toNum(id(`y${year}_m${idx}_c`));
    const s = toNum(id(`y${year}_m${idx}_s`));
    id(`y${year}_m${idx}_c_tot`).textContent = BRL(c+s);
  });
}

// Eventos inputs
[...document.querySelectorAll('input[type=number]')].forEach(el=>{
  el.addEventListener('input', ()=>{
    const yr = el.id.startsWith('y2024_') ? 2024 : (el.id.startsWith('y2025_') ? 2025 : null);
    if(yr) updateRowTotals(yr);
    saveLS();
  });
});

// LS
const LSKEY='sn_calc_ax1_ax3_rbt12_auto_v1';
function saveLS(){
  const d={};
  // meses 2024/2025
  [2024,2025].forEach(year=>{
    MESES.forEach((_,idx)=>{
      d[`y${year}_m${idx}_c`]= id(`y${year}_m${idx}_c`).value;
      d[`y${year}_m${idx}_s`]= id(`y${year}_m${idx}_s`).value;
    });
  });
  d.competencia = id('competencia').value;
  d.modo = id('modo_rbt12').value;
  d.rbt12_manual = id('rbt12_manual').value;
  d.mes_c_manual = id('mes_comercio_manual').value;
  d.mes_s_manual = id('mes_servico_manual').value;
  localStorage.setItem(LSKEY, JSON.stringify(d));
}
function loadLS(){
  const raw = localStorage.getItem(LSKEY);
  if(!raw) return;
  try{
    const d = JSON.parse(raw);
    [2024,2025].forEach(year=>{
      MESES.forEach((_,idx)=>{
        id(`y${year}_m${idx}_c`).value = d[`y${year}_m${idx}_c`] ?? '';
        id(`y${year}_m${idx}_s`).value = d[`y${year}_m${idx}_s`] ?? '';
      });
      updateRowTotals(year);
    });
    if(d.competencia) id('competencia').value = d.competencia;
    if(d.modo) id('modo_rbt12').value = d.modo;
    id('rbt12_manual').value = d.rbt12_manual ?? '';
    id('mes_comercio_manual').value = d.mes_c_manual ?? '';
    id('mes_servico_manual').value  = d.mes_s_manual ?? '';
    toggleManual();
  }catch(e){}
}

// Botão preencher conforme print enviado (2024)
id('fill-2024-print').addEventListener('click', ()=>{
  // Do print: Jul 1.100.000,00 | Ago 354.993,56 | Set 231.948,69 | Dez 878.711,70 | demais 0
  const setVal=(monthIdx, total)=>{
    // Assume tudo como "Comércio" por padrão; ajuste se necessário
    id(`y2024_m${monthIdx}_c`).value = String(total);
    id(`y2024_m${monthIdx}_s`).value = '';
  };
  // Janeiro..Dezembro index 0..11
  [0,1,2,3,4,5,6,7,8,9,10,11].forEach(i=>{ id(`y2024_m${i}_c`).value=''; id(`y2024_m${i}_s`).value=''; });
  setVal(6, 1100000.00);   // Jul
  setVal(7, 354993.56);    // Ago
  setVal(8, 231948.69);    // Set
  setVal(11, 878711.70);   // Dez
  updateRowTotals(2024);
  saveLS();
});

// Mostrar/ocultar campo manual
function toggleManual(){
  const isManual = id('modo_rbt12').value === 'manual';
  id('fs-manual').style.display = isManual ? '' : 'none';
}
id('modo_rbt12').addEventListener('change', ()=>{ toggleManual(); saveLS(); });
id('competencia').addEventListener('change', saveLS);

// Cálculos
function faixaFor(rbt12, tabela){
  return tabela.find(f=> rbt12>=f.de && rbt12<=f.ate) || tabela[tabela.length-1];
}
function aliqEfetiva(rbt12, aliqNom, pd){
  if(rbt12<=0) return 0; return ((rbt12*aliqNom - pd)/rbt12);
}
function calculaAnexo({rbt12, receitaMes, tabela, splitMap, nomes}){
  const fx = faixaFor(rbt12, tabela);
  const efetiva = aliqEfetiva(rbt12, fx.aliq, fx.pd);
  const base = receitaMes * efetiva;
  const split = splitMap[fx.faixa];
  const valores = {}; let soma = 0;
  split.forEach((p,idx)=>{ const v = base * p; valores[nomes[idx]] = {perc:p, valor:v}; soma += v; });
  return {fx, efetiva, valores, total:soma};
}
function regra480ICMS(rbt12, ax1){
  if(rbt12 <= 4800000) return {aplica:false, texto:'RBT12 ≤ R$ 4,8 mi — sem ajuste especial de ICMS.'};
  const percICMS = SPLIT_I[ax1.fx.faixa][5] || 0;
  const aliqICMS = ax1.efetiva * percICMS;
  return {aplica:true, texto:`RBT12 > R$ 4,8 mi — destaque ICMS. Alíquota efetiva ICMS (aprox.): ${(aliqICMS*100).toFixed(2).replace('.',',')}%`};
}

function getAutoRBT12AndMonthRevenues(){
  // competência YYYY-MM
  const comp = id('competencia').value; // e.g., 2025-03
  const [yStr,mStr]=comp.split('-'); const Y=parseInt(yStr), M=parseInt(mStr); // 1..12
  // RBT12 = soma dos 12 meses imediatamente anteriores ao mês de apuração
  // Para 2025, esses meses podem pegar parte de 2024 e 2025
  let rbt12 = 0;
  // meses anteriores: (Y, M-1), (Y, M-2), ..., total 12
  let months=[];
  for(let i=1;i<=12;i++){
    let y = Y, m = M - i; // m pode ficar <=0
    if(m<=0){ y = Y-1; m = 12 + m; }
    months.push({y, m});
  }
  months.forEach(({y,m})=>{
    const idx = m-1;
    const c = toNum(id(`y${y}_m${idx}_c`));
    const s = toNum(id(`y${y}_m${idx}_s`));
    rbt12 += (c+s);
  });
  // Receita do mês da competência (separada)
  const mesIdx = M-1;
  const mesC = toNum(id(`y${Y}_m${mesIdx}_c`));
  const mesS = toNum(id(`y${Y}_m${mesIdx}_s`));
  return {rbt12, mesC, mesS, competenciaOut: `${MESES[mesIdx]}/${Y}`};
}

function render({rbt12, mesC, mesS, competenciaOut}){
  id('competencia_out').textContent = competenciaOut;
  id('rbt12').textContent = BRL(rbt12);
  id('mes_total').textContent = BRL(mesC+mesS);
  // Anexo I
  const ax1 = calculaAnexo({ rbt12, receitaMes:mesC, tabela:ANEXO_I, splitMap:SPLIT_I, nomes:['IRPJ','CSLL','COFINS','PIS','CPP','ICMS'] });
  id('ax1-faixa').textContent = `Faixa ${ax1.fx.faixa}`;
  id('ax1-aliq').textContent  = (ax1.fx.aliq*100).toFixed(2).replace('.',',')+'%';
  id('ax1-pd').textContent    = BRL(ax1.fx.pd);
  id('ax1-efetiva').textContent = (ax1.efetiva*100).toFixed(2).replace('.',',')+'%';
  fillTribTable('ax1-trib', ax1.valores);
  id('ax1-total').textContent = BRL(ax1.total);
  id('ax1-480').textContent   = regra480ICMS(rbt12, ax1).texto;
  // Anexo III
  const ax3 = calculaAnexo({ rbt12, receitaMes:mesS, tabela:ANEXO_III, splitMap:SPLIT_III, nomes:['CPP','ISS','CSLL','PIS','COFINS','IRPJ'] });
  id('ax3-faixa').textContent = `Faixa ${ax3.fx.faixa}`;
  id('ax3-aliq').textContent  = (ax3.fx.aliq*100).toFixed(2).replace('.',',')+'%';
  id('ax3-pd').textContent    = BRL(ax3.fx.pd);
  id('ax3-efetiva').textContent = (ax3.efetiva*100).toFixed(2).replace('.',',')+'%';
  fillTribTable('ax3-trib', ax3.valores);
  id('ax3-total').textContent = BRL(ax3.total);
  id('ax3-480').textContent   = (rbt12>4800000)? 'RBT12 > R$ 4,8 mi — observar regras específicas do ISS (sem ajuste de ICMS).' : 'RBT12 ≤ R$ 4,8 mi — sem observações.';
  id('das-total').textContent = BRL(ax1.total + ax3.total);
}

function fillTribTable(tbodyId, valores){
  const tbody = id(tbodyId); tbody.innerHTML = '';
  Object.entries(valores).forEach(([k, obj])=>{
    const tr = document.createElement('tr');
    tr.innerHTML = `<td>${k}</td><td class="num">${(obj.perc*100).toFixed(2).replace('.',',')}%</td><td class="num">${BRL(obj.valor)}</td>`;
    tbody.appendChild(tr);
  });
}

// Calcular
id('calc').addEventListener('click', ()=>{
  let rbt12, mesC, mesS, competenciaOut;
  if(id('modo_rbt12').value === 'manual'){
    rbt12 = parseFloat(id('rbt12_manual').value||'0');
    mesC  = parseFloat(id('mes_comercio_manual').value||'0');
    mesS  = parseFloat(id('mes_servico_manual').value||'0');
    const [y,m] = id('competencia').value.split('-');
    competenciaOut = `${MESES[parseInt(m)-1]}/${y}`;
  } else {
    ({rbt12, mesC, mesS, competenciaOut} = getAutoRBT12AndMonthRevenues());
  }
  render({rbt12, mesC, mesS, competenciaOut});
});

// Tabelas de conferência visual
function buildFaixaTable(tabela, elId){
  const el = id(elId);
  el.innerHTML = '<tr><th>Faixa</th><th>De</th><th>Até</th><th>Alíquota</th><th>PD</th></tr>' +
    tabela.map(f=> `<tr>
      <td>${f.faixa}</td>
      <td class="num">${BRL(f.de)}</td>
      <td class="num">${BRL(f.ate)}</td>
      <td class="num">${(f.aliq*100).toFixed(2).replace('.',',')}%</td>
      <td class="num">${BRL(f.pd)}</td>
    </tr>`).join('');
}
function buildSplitTable(splitMap, headers, elId){
  const el = id(elId);
  const faixas = Object.keys(splitMap).map(n=>parseInt(n)).sort((a,b)=>a-b);
  el.innerHTML = `<tr><th>Faixa</th>${headers.map(h=>`<th class=\"num\">${h}</th>`).join('')}</tr>` +
    faixas.map(fx=>{
      const arr = splitMap[fx];
      return `<tr><td>${fx}</td>${arr.map(p=>`<td class=\"num\">${(p*100).toFixed(2).replace('.',',')}%</td>`).join('')}</tr>`;
    }).join('');
}

buildFaixaTable(ANEXO_I, 'tbl-ax1');
buildFaixaTable(ANEXO_III, 'tbl-ax3');
buildSplitTable(SPLIT_I, ['IRPJ','CSLL','COFINS','PIS','CPP','ICMS'], 'tbl-ax1-split');
buildSplitTable(SPLIT_III, ['CPP','ISS','CSLL','PIS','COFINS','IRPJ'], 'tbl-ax3-split');

// Inicialização
loadLS();
updateRowTotals(2024); updateRowTotals(2025);
// Render inicial vazio
render({rbt12:0, mesC:0, mesS:0, competenciaOut: '—'});

// Botão para baixar este próprio HTML
id('download-btn').addEventListener('click', ()=>{
  const html = document.documentElement.outerHTML;
  const blob = new Blob([html], {type:'text/html;charset=utf-8'});
  const url = URL.createObjectURL(blob);
  const a = document.createElement('a');
  a.href = url; a.download = 'simples_nacional_rbt12_automatico.html';
  document.body.appendChild(a); a.click(); a.remove();
  setTimeout(()=> URL.revokeObjectURL(url), 2000);
});
</script>
</body>
</html>
